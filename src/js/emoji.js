import localEmoji from './json/localEmoji.json';

const emojiRegex = /.\u20E3|\p{Emoji_Modifier_Base}\p{Emoji_Modifier}?|\p{Emoji_Presentation}|\p{Emoji}\uFE0F/gu;

// TODO –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∫ —ç–º–æ–¥–∑–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –Ω–µ –ª–æ–º–∞—è –∏—Ö
// export const modifiers = {
//   // –¶–≤–µ—Ç
//   light: 'üèª',
//   mediumLight: 'üèº',
//   medium: 'üèΩ',
//   mediumDark: 'üèæ',
//   dark: 'üèø',
//   // –ü–æ–ª
//   female: '‚ôÄÔ∏è',
//   male: '‚ôÇÔ∏è',
//   // –°–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –¥–ª—è "—Å–∫–ª–µ–∏–≤–∞–Ω–∏—è" —ç–º–æ–¥–∑–∏
//   separator: 'üßü‚Äç‚ôÄ'[2]
// }

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —ç–º–æ–¥–∑–∏ —Å–∏–º–≤–æ–ª –≤ hex-–∫–æ–¥
export function getEmojiCode(emoji) {
  return encodeURIComponent(emoji).replace(/%/g, '').toLowerCase();
}

export function getEmojiFromCode(rawCode) {
  // isKeyCap = true —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞—è—Ö —Å —ç–º–æ–¥–∑–∏ "1‚É£".
  // –ï–≥–æ –∫–æ–¥ - ?e283a3, –≥–¥–µ ? - —ç—Ç–æ —Å–∏–º–≤–æ–ª—ã 0-9, # –∏ *
  let isKeyCap = rawCode.length % 2 == 1,
      start = isKeyCap ? rawCode.slice(0, 1) : '',
      code = isKeyCap ? rawCode.slice(1) : rawCode;

  return start + decodeURIComponent('%' + code.match(/(..?)/g).join('%'));
}

function parseLocalEmoji(data) {
  return data.split('|').map((n) => {
    const nums = [
      288, 0, 5, 128, 7, 6, 160, 64, 96, 208, 112, 80,
      16, 192, 48, 4, 176, 32, 224, 144, 256, 240, 2, 1, 3, 8
    ];

    if(n === '') return 272;
    else return nums[n];
  });
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑ —ç–º–æ–¥–∑–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É
export function generateEmojiImage(emoji) {
  const local = localEmoji[emoji];
  let props = '';

  if(local) {
    let [id, x, y, posX, posY] = parseLocalEmoji(local),
        style = `background: url('assets/emoji_sprites/sprite_${id}.png') -${x}px -${y}px`;

    if(devicePixelRatio >= 2) style += ` / ${posX}px ${posY}px;`;

    props = `src="assets/blank.gif" style="${style}"`;
  } else {
    props = `src="https://vk.com/emoji/e/${getEmojiCode(emoji)}.png"`;
  }

  return `<img class="emoji" ${props} alt="${emoji}">`;
}

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
export default function(text = '') {
  return text.replace(/&nbsp;/g, ' ').replace(/\uFE0F/g, '')
             .replace(emojiRegex, generateEmojiImage);
}
